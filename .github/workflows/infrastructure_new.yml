name: Terraform_New
#
on:
  push:
    branches:
      - "dev"
      - "ppd"
      - "prd"
    paths:
      - .github/workflows/infrastructure_new.yml
      - iac/**
      - "!**/README.md"

permissions:
  id-token: write
  contents: read
  issues: write
  
env:
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      deploy_env: ${{ steps.setup.outputs.deploy-env }}
    name: "Setup environment"
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: "Check branch and set env variable"
        id: setup
        uses: ./.github/actions/setup

  plan:
    needs: setup
    name: Terraform plan
    runs-on: ubuntu-latest
    environment: ${{ needs.setup.outputs.deploy_env }}
    env:
      ENV_PATH: "environment/${{ needs.setup.outputs.deploy_env }}"
    defaults:
      run:
        working-directory: ${{ vars.TERRAFORM_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest  # or specify a version like "1.6.0"
          

      - name: Terraform Init
        id: init
        run: |
          terraform init -backend-config="${{ env.ENV_PATH }}/backend-config.tfvars"

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan --out=out.tfplan --var-file="${{ env.ENV_PATH }}/${{ needs.setup.outputs.deploy_env }}.tfvars"

      - name: Upload the plan
        uses: actions/upload-artifact@v4.6.0
        with:
          name: tfplan
          path: ${{ vars.TERRAFORM_DIR }}/out.tfplan

  apply:
    name: Terraform apply
    needs: [plan, setup]
    runs-on: ubuntu-latest
    environment: ${{ needs.setup.outputs.deploy_env }}
    env:
      ENV_PATH: "environment/${{ needs.setup.outputs.deploy_env }}"
    defaults:
      run:
        working-directory: ${{ vars.TERRAFORM_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest  # Or specify a version, e.g., "1.6.0"

      - name: Verify Terraform Installation
        run: terraform version  # Check if Terraform is installed correctly
          

      - name: Terraform Init
        id: init
        run: |
          terraform init -backend-config="${{ env.ENV_PATH }}/backend-config.tfvars"

      - name: Download the plan
        uses: actions/download-artifact@v4.1.8
        with:
          name: tfplan
          path: ${{ vars.TERRAFORM_DIR }}

      - name: Apply the plan
        id: apply
        run: |
          terraform apply -auto-approve out.tfplan
